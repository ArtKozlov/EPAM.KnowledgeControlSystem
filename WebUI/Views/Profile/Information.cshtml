
@using WebUI.Helpers
@model WebUI.ViewModels.ProfileViewModel
@{
    ViewBag.Title = "Profile";
}
@section Search{}
<div id="results">
        <h2>Profile Information</h2>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.User.Email)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => Model.User.Email)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.User.Name)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => Model.User.Name)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.User.Age)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => Model.User.Age)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.User.Roles)
                </th>
                <td>
                    @foreach (var elem in Model.User.Roles)
            {
                        @Html.DisplayFor(modelItem => elem.Name)
                        <br />
                    }
                </td>

            </tr>
        </table>
        <h2>Your completed tests</h2>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.TestResults.GetEnumerator().Current.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.TestResults.GetEnumerator().Current.GoodAnswers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.TestResults.GetEnumerator().Current.BadAnswers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.TestResults.GetEnumerator().Current.DateCompleted)
            </th>
        </tr>

        @foreach (var item in Model.User.TestResults)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GoodAnswers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BadAnswers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCompleted)
                </td>
                <td>
                    @Ajax.ActionLink("Delete", "DeleteTestResult", new {id = item.Id},
                        new AjaxOptions {Confirm = "Do you want delete '" + item.Name + "'?", UpdateTargetId = "results"})
                </td>
            </tr>
        }

    </table>
    <div>
        @if (Model.PageInfo.TotalPages <= 4)
        {
            @Html.FewPageLinks(Model.PageInfo, x => Url.Action("Information", new { page = x }))
        }
        else
        {
            @Html.PageTopLink(Model.PageInfo, x => Url.Action("Information", new { page = x }))

            @Html.PageLinks(Model.PageInfo, x => Url.Action("Information", new { page = x }))

            @Html.PageEndLink(Model.PageInfo, x => Url.Action("Information", new { page = x }))
        }

    </div>
    </div>
    @Scripts.Render("~/scripts/jquery-1.10.2.min.js")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")


