@using WebUI.Helpers
@model WebUI.ViewModels.HomeViewModel
@{
    ViewBag.Title = "Home";
}


<div id="results">
    <div class="container-fluid text-center">
        @section Search
        {@using (Ajax.BeginForm("TestSearch", new { page = 1 }, new AjaxOptions { UpdateTargetId = "results" }))
        {
            <div class="col-sm-3 col-md-3" style="margin-top: 7px">
                    <div class="input-group">
                        <input type="text" class="form-control" name="searchItem" placeholder="Search...">
                        <div class="input-group-btn">
                            <button class="btn btn-default" type="submit" value="Search">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </div>
                    </div>
            </div>
        }}

        <div class="row content">
            <div class="col-sm-2">
                <p class="text-muted">advertisement</p>
            </div>
            <div class="col-sm-8 text-left">
                <h3>List of tests</h3>
                <div class="container">
                    <div class="list-group">
                        @foreach (var item in Model.Tests)
                        {
                            if (item.IsValid)
                            {
                                <div class="list-group-item">

                                    <div class="container">
                                        <div class="row">
                                        <div class="col-sm text-primary" >Test name: @item.Name</div>
                                        <div class="col-sm">The creator the test: @item.Creator</div>
                                            <div class="col-sm">The count of questions the test: @item.Questions.Count</div>
                                            <div class="col-sm">The time for passing the test: @item.Time</div>
                                        <div class="col-sm">Discription</div>
                                        <div class="col-sm">
                                            @Html.ActionLink("Start test", "Passing", new {id = item.Id}, new {@class = "btn btn-success"})
                                        </div>
                                    </div>
                                    </div>
                                    </div>
                            }
                        }
                        </div>
                    </div>

                <div class="text-center">
                    @if (Model.PageInfo.TotalPages <= 4)
                    {
                        @Html.FewPageLinks(Model.PageInfo, x => Url.Action("Home", new {page = x}))
                    }
                    else
                    {
                        @Html.PageTopLink(Model.PageInfo, x => Url.Action("Home", new {page = x}))

                        @Html.PageLinks(Model.PageInfo, x => Url.Action("Home", new {page = x}))

                        @Html.PageEndLink(Model.PageInfo, x => Url.Action("Home", new {page = x}))
                    }

                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/scripts/jquery-1.10.2.min.js")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")
}