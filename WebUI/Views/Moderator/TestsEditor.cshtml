
@using WebUI.Helpers
@model WebUI.ViewModels.TestEditorViewModel
@{
    ViewBag.Title = "Moderator room";
}
@section Search{}
<div id="results">
    <h1>Moderator room</h1>
    <div>
        <h3>Search:</h3>
        @using (Ajax.BeginForm("TestsEditor", new { page = 1 }, new AjaxOptions { UpdateTargetId = "results" }))
        {
            <input type="text" name="name" />
            <input type="submit" value="Search" />
        }
    </div>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tests.GetEnumerator().Current.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tests.GetEnumerator().Current.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tests.GetEnumerator().Current.Creator)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tests.GetEnumerator().Current.IsValid)
            </th>
        </tr>

        @foreach (var item in Model.Tests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creator)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsValid)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditTest", new {id = item.Id}) |
                    @Ajax.ActionLink("Delete", "DeleteTest", new {id = item.Id},
                        new AjaxOptions {Confirm = "Do you want delete '" + item.Name + "'?", UpdateTargetId = "results"})
                </td>
            </tr>
        }

    </table>
    <div>
        @if (Model.PageInfo.TotalPages <= 4)
        {
            @Html.FewPageLinks(Model.PageInfo, x => Url.Action("TestsEditor", new { page = x }))
        }
        else
        {
            @Html.PageTopLink(Model.PageInfo, x => Url.Action("TestsEditor", new { page = x }))

            @Html.PageLinks(Model.PageInfo, x => Url.Action("TestsEditor", new { page = x }))

            @Html.PageEndLink(Model.PageInfo, x => Url.Action("TestsEditor", new { page = x }))
        }

    </div>
</div>
@Scripts.Render("~/scripts/jquery-1.10.2.min.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")





